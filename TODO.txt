* Currently there is one 8-bit latch for the whole bank register, in IO1
	At power on, after _RESET, _GAME is high and _EXROM is low, giving 8KB ROML based cartridge
	Adding another register in IO2 will allow the _GAME and _EXROM lines to be controlled
	* It would be possible to set _GAME low and have _EXROM high (from IO2 register) only when A15 is set and R_W is low and when RGAME (IO2 register control GAME bit) is high and PHI2 is high
		This would give ultimax mode and allow writes to $e000-$ffff to control the address (plus IO1 bank register) and data lines lines to the flash _WE (_RWE i.e. ROM _WE) signal
		_ROMH would go straight to _RWE
	* Using M29F160FT55N3E2
	Page 25 Command write signals
		>> Note _OE must be high during commands/programming
		>> The address inputs are latched by the command interface on the falling edge of CE# or WE#, whichever occurs last.
		>> The data I/Os are latched by the command interface on the rising edge of CE# or WE#, whichever occurs first.
	Page 31 programm command, chip erase, block erase etc
	Page 37 https://www.mouser.sg/datasheet/2/12/M29FxxFT_FB-2999423.pdf says "Bus Read operations from any address always read the Status Register during Program and Erase operations."
	Page 47 Documents VID voltage 11.5V-12.5V
	Page 53 Gives program and erase timings, in seconds!
		Chip erase typical 25 seconds, max 120 seconds!!
		Block erase typcial 0.8 seconds, max 6 seconds!!
	>> Note: During Program operations the Data Polling Bit outputs the complement of the bit being programmed to DQ7. After successful completion of the Program operation the
memory returns to Read mode and Bus Read operations from the address just programmed output DQ7, not its complement.


* Programming hardware
	Output
		D0..7
		A0..15
		LATOUT0	=> _LATOUT0
		RWE		=> _RWE
		_IO1
		_IO2
		PHI2
		R_W
		_ROML
		_ROMH
		>> 32 signals in total with the above optionals
		_RESET

	Input
		D0..7
		RYBY
		>> 8/9 signals
	* Need to optionally tri-state the data output to allow reading the result from the external memory
	* Test hardware:
		>> Appropriate level shifters 3.3V to 5V
		>> 8 signals for data in
		>> 8 signals for data out
		>> 5 x 74LS373 or 74LS374
			> Each would need a signal, no real need for a decoder (74LS138) since signals are not a limiting factor
		>> 5 signals for latch select, multiple latches can be set at the same time
		>> 25 signals
	* Note: The output latch must not be default to output, it must guard against logic contentions with the cart memory
		U5 defaults to clear, for the cartridge _RESET

	* Done: Game and exrom can be read
		PGAME and PEXROM through the level shifters, for safety
	* And bigger holes on headers
		Using S-80-40 from the CONN-DIL40
	* Done: Also try to find a part for a better cart connector that can be soldered.
	* Done: And match the Pi pin out, the Pi has pins pointing upwards...
	* Check the header pins are long, they seem to be short at the moment...
		Check with existing purchases...
			https://www.mouser.sg/ProductDetail/Preci-dip/801-87-040-10-001101?qs=FtMuP6KVi2Q5EJHayha1aA%3D%3D
			https://www.mouser.sg/ProductDetail/Preci-dip/803-87-040-10-001101?qs=q5BRkYolQ3gdlKuqU9%2F7IQ%3D%3D
			https://www.mouser.sg/ProductDetail/Preci-dip/801-87-008-53-001101?qs=q5BRkYolQ3gnRfYCsKSECg%3D%3D&countrycode=SG&currencycode=SGD
			https://www.mouser.sg/ProductDetail/Preci-dip/801-87-010-53-001101?qs=q5BRkYolQ3jHhHUKXrMBBA%3D%3D&countrycode=SG&currencycode=SGD
				Wire wrap termination style!
			Various preci-dip positions: https://www.mouser.sg/c/connectors/headers-wire-housings/?contact%20gender=Socket%20%28Female%29&m=Preci-dip&mounting%20angle=Straight&mounting%20style=Through%20Hole&pitch=2.54%20mm%20%280.1%20in%29&product=Headers&termination%20style=Wire%20Wrap&type=Socket&instock=y
	* Done: Add debug header for the cartridge, large holes again
	* Done: Add power socket, LED, capacitors
	* Done: Add four indicator LEDs connected to the last latch
